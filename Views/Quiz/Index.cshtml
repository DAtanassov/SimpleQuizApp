@model SimpleQuizApp.Models.ViewModels.QuizViewModel

<div class="container py-5">

	@if (!Model.Questions.Any())
	{
		<div class="alert alert-warning text-center shadow-sm" role="alert">
			No quiz questions are available at the moment. Please check back later.
		</div>
		<div class="text-center mt-4">
			<a asp-controller="Home" asp-action="Index" class="btn btn-primary btn-sm px-4">Back to Home</a>
		</div>
	}
	else
	{
		<div class="row justify-content-center">

			@* Vertical Progress Bar Timer *@
			<div class="col-1 d-flex justify-content-center">
				<div class="progress" style="height: 100%; width: 20px; position: sticky; top: 100px;">
					<div id="timeBar" class="progress-bar bg-danger"
						 role="progressbar"
						 style="height: 100%; width: 100%; transform-origin: bottom; transform: scaleY(1);">
					</div>
				</div>
			</div>

			@* Quiz Content *@
			<div class="col-md-9 col-lg-7">
				<div class="card shadow-lg border-0">
					<div class="card-body p-4">

						<div class="text-center mb-4">
							<h2 class="fw-bold text-primary">Take the Quiz</h2>
							<p class="text-muted">Answer all questions and submit your answers below.</p>
							<p class="text-muted">You have two minutes per question.</p>
							<div id="timer" class="fs-5 fw-bold text-danger">
								⏱ Time left: <span id="time">10:00</span>
							</div>
						</div>

						<form id="quizForm" asp-controller="Quiz" asp-action="SubmitQuiz" method="post">
							<input type="hidden" name="QuizId" value="@Model.QuizId" />

							@for (int i = 0; i < Model.Questions.Count; i++)
							{
								<div class="card mb-3 border-0 shadow-sm">
									<div class="card-body">
										<h5 class="card-title mb-3">
											<span class="badge bg-primary me-2">@(i + 1)</span>
											@Model.Questions[i].QuestionText
										</h5>

										<div class="list-group">
											@foreach (var answer in Model.Questions[i].Answers)
											{
												<label class="list-group-item list-group-item-action d-flex align-items-center">
													<input required class="form-check-input me-3" type="radio" value="@answer.Id" name="userAnswers[@i]" />
													<span><strong>@answer.Option.</strong> @answer.Text</span>
												</label>
											}
										</div>
									</div>
								</div>
							}
							<div class="text-center mt-4">
								<div id="quizProgress" class="fs-5 fw-bold text-danger">
									✅ Marked: <span id="aswersMarked">0 of 0</span>
								</div>
							</div>
							<div class="text-center mt-4">
								<button type="submit" class="btn btn-success btn-sm px-4 me-2">Submit Quiz</button>
								<button type="reset" class="btn btn-warning btn-sm px-4 me-2">Reset answers</button>
								<a asp-controller="Quiz" asp-action="Index" asp-route-Id="@Model.QuizId" class="btn btn-info btn-sm px-4 me-2 text-danger">Reload Quiz</a>
								<a asp-controller="Home" asp-action="Index" class="btn btn-primary btn-sm px-4">Back to Home</a>
							</div>
						</form>
					</div>
				</div>

			</div>

			@* Vertical Progress Bar Questions *@
			<div class="col-1 d-flex justify-content-center">
				<div class="progress" style="height: 100%; width: 20px; position: sticky; top: 100px;">
					<div id="questionsBar" class="progress-bar bg-success"
						 role="progressbar"
						 style="height: 100%; width: 100%; transform-origin: bottom; transform: scaleY(1);">
					</div>
				</div>
			</div>

		</div>

		@section Scripts {
			<script>

				let totalQuestions = @Model.Questions.Count;
				let answered = 0;

				// 2 minutes per question
				let totalSeconds = totalQuestions * 2 * 60;
				const totalTime = totalSeconds; // for progress calculation

				const timerElement = document.getElementById("time");
				const quizForm = document.getElementById("quizForm");

				// Bars
				const timeBar = document.getElementById("timeBar");
				const questionsBar = document.getElementById("questionsBar");

				const aswersProgress = document.getElementById("aswersMarked");

				function updateTimer() {

					let minutes = Math.floor(totalSeconds / 60);
					let seconds = totalSeconds % 60;

					// Update time left
					timerElement.textContent = minutes.toString().padStart(2, "0") + ":" + seconds.toString().padStart(2, "0");

					// Update vertical progress bar
					let percent = totalSeconds / totalTime;
					timeBar.style.transform = `scaleY(${percent})`;

					if (totalSeconds <= 0) {
						clearInterval(countdown);
						alert("⏰ Time is up! Your quiz will be submitted automatically.");
						quizForm.submit(); // auto-submit form
					}

					totalSeconds--;
				}

				document.querySelectorAll('input[type=radio]').forEach(radio => {

					radio.addEventListener('change', () => {

						let uniqueAnswered = new Set();

						document.querySelectorAll('input[type=radio]:checked').forEach(r => {
							uniqueAnswered.add(r.name);
						});

						answered = uniqueAnswered.size;
						// Update vertical progress bar
						let percent = answered / totalQuestions;
						questionsBar.style.transform = `scaleY(${percent})`;
						// Update text
						aswersProgress.textContent = answered.toString() + " of " + totalQuestions.toString();
					});
				});

				quizForm.addEventListener('reset', function (event) {
					resetQuestionBar();
				});

				function resetQuestionBar() {
					questionsBar.style.transform = `scaleY(${0})`;
					aswersProgress.textContent = "0 of " + totalQuestions;
				}

				// Reset vertical progress bar and text for marked answers
				resetQuestionBar();

				const countdown = setInterval(updateTimer, 1000);
				updateTimer(); // initial call

			</script>
		}
	}
</div>